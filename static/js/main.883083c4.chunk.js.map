{"version":3,"sources":["Components/Clock/Clock.jsx","Components/App.jsx","index.js"],"names":["Clock","parseInt","this","props","hours","minutes","seconds","dispatch","type","_this","setInterval","handleTime","bgColor","react_default","a","createElement","className","style","backgroundColor","date","Component","connect","state","initialState","store","createStore","arguments","length","undefined","timeNow","Date","getSeconds","getMinutes","getHours","dateDay","getDay","dateMonth","getMonth","dateYear","getFullYear","console","log","concat","newSeconds","toString","newMinutes","App","es","margin","padding","Components_Clock_Clock","ReactDOM","render","src_Components_App","document","getElementById"],"mappings":"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","file":"static/js/main.883083c4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../App.css';\r\n\r\nclass Clock extends Component {\r\n\r\n  handleTime(){\r\n    if(parseInt(this.props.hours) === 23 &&\r\n    parseInt(this.props.minutes) === 59 &&\r\n    parseInt(this.props.seconds) === 59){\r\n      this.props.dispatch({type: \"NEW_DAY\"});\r\n    } else {\r\n      if(parseInt(this.props.seconds) < 59){\r\n        this.props.dispatch({type: \"INCREMENT_SECONDS\"});\r\n      } else if(parseInt(this.props.seconds) === 59) {\r\n        if(parseInt(this.props.minutes) === 59) {\r\n          this.props.dispatch({type: \"INCREMENT_HOURS\"});\r\n        } else {\r\n          this.props.dispatch({type: \"INCREMENT_MINUTES\"});\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.dispatch({type: \"INITIAL_TIME\"});\r\n    setInterval(() => this.handleTime(), 1000);\r\n  }\r\n\r\n  render(){\r\n    let bgColorHours = this.props.hours;\r\n    let bgColorMinutes = this.props.minutes;\r\n    let bgColorSeconds = this.props.seconds;\r\n\r\n    let bgColor = (\"#\" + bgColorHours + bgColorMinutes + bgColorSeconds);\r\n    return(\r\n      <div className=\"clock\" style = {{backgroundColor: bgColor}}>\r\n        <div className = \"clock-face\">\r\n          #{this.props.hours}{this.props.minutes}{this.props.seconds}\r\n        </div>\r\n        <div className = \"clock-date\">\r\n          {this.props.date}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  seconds: state.seconds,\r\n  minutes: state.minutes,\r\n  hours: state.hours,\r\n  date: state.date\r\n})\r\nexport default connect(mapStateToProps)(Clock);\r\n","import React, { Component } from 'react';\nimport Clock from './Clock/Clock.jsx';\n\nimport { createStore } from 'redux';\nimport { Provider } from \"react-redux\";\n\nconst initialState = {\n  hours: \"00\",\n  minutes: \"00\",\n  seconds: \"00\"\n}\n\nfunction reducer(state = initialState, action) {\n  switch(action.type) {\n    case \"INITIAL_TIME\":\n      let timeNow = new Date();\n      let seconds = timeNow.getSeconds()<10 ? \"0\" + timeNow.getSeconds() : timeNow.getSeconds();\n      let minutes = timeNow.getMinutes()<10 ? \"0\" + timeNow.getMinutes() : timeNow.getMinutes();\n      let hours = timeNow.getHours()<10 ? \"0\" + timeNow.getHours() : timeNow.getHours();\n      let dateDay = timeNow.getDay();\n      let dateMonth = timeNow.getMonth();\n      let dateYear = timeNow.getFullYear();\n      console.log(`${dateYear}`);\n      return {\n        hours,\n        minutes,\n        seconds,\n        date: `${dateDay}/${dateMonth}/${dateYear}`\n      }\n    case \"INCREMENT_SECONDS\":\n    let newSeconds = (parseInt(state.seconds) + 1) < 10 ? \"0\" + (parseInt(state.seconds) + 1).toString() : parseInt(state.seconds) + 1;\n      return {\n        hours: state.hours,\n        minutes: state.minutes,\n        seconds: newSeconds,\n        date: state.date\n      };\n    case \"INCREMENT_MINUTES\":\n      let newMinutes = (parseInt(state.minutes) + 1) < 10 ? \"0\" + (parseInt(state.minutes) + 1).toString() : parseInt(state.minutes) + 1;\n      return {\n        hours: state.hours,\n        minutes: newMinutes,\n        seconds: \"00\",\n        date: state.date\n      }\n    case \"INCREMENT_HOURS\":\n      let newHours = (parseInt(state.hours) + 1) < 10 ? \"0\" + (parseInt(state.hours) + 1).toString() : parseInt(state.hours) + 1;\n      return {\n        hours: newHours,\n        minutes: \"00\",\n        seconds: \"00\",\n        date: state.date\n      }\n    case \"NEW_DAY\":\n      timeNow = new Date();\n      dateDay = timeNow.getDay();\n      dateMonth = timeNow.getMonth();\n      dateYear = timeNow.getFullYear();\n      return {\n        hours: \"00\",\n        minutes: \"00\",\n        seconds: \"00\",\n        date: `${dateDay}/${dateMonth}/${dateYear}`\n      }\n\n    default:\n      return state;\n  }\n}\n\nconst store = createStore(reducer);\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store = {store}>\n        <div style = {{margin: 0, padding: 0}}>\n          <Clock />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App.jsx';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}